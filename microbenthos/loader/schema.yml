cls: &cls_schema
    required: true

entity_schema: &entity_schema
    cls:
        type: importpath
        <<: *cls_schema

    init_params:
        type: dict

chemicals: &chemical_schema
    cls:
        <<: *cls_schema
        allowed: [microbenthos.chemicals.Chemical, Chemical]

    create:
        schema:
            hasOld:
                type: boolean
                default: false

            value:
                type: physical_unit
                like_unit: mol/l
                default: !unit 0.0 mol/l

            name:
                type: string

    constrain:
        type: list
        schema:
            items:
                - type: string
                  allowed: ['top', 'bottom']
                - type: physical_unit
                  like_unit: mol/l


irradiance: &irradiance_schema
    cls:
        <<: *cls_schema
        allowed: [microbenthos.irradiance.Irradiance, Irradiance]

    init_params:
        schema:
            hours_total:
                type: float
                min: 5
                max: 48
            day_fraction:
                type: float
                min: 0.1
                max: 0.9
    channels:
        type: list
        schema:
            type: dict
            schema:
                name:
                    type: string
                    min: 2
                    required: true

                k0:
                    type: physical_unit
                    like_unit: 1/m

                k_mods:
                    type: list
                    schema:
                        items:
                            - type: string
                            - type: [physical_unit, float]

microbes: &microbes_schema
    cls:
        <<: *cls_schema
        allowed: [microbenthos.microbes.MicrobialGroup, MicrobialGroup]

    init_params:
        type: dict
        schema:
            name:
                type: string
                min: 2

    processes:
        type: dict
        keyschema:
            type: string
        schema:
            Qmax:
                type: physical_unit
                like_unit: mol/g/h

            responses:
                type: dict

processbase: &procbase
    type: dict
    keyschema:
        type: sympifyable
    valueschema: &procbase_value
        schema: &procbase_valueschema
            cls:
                <<: *cls_schema
                allowed: [ExprProcess, microbenthos.process.ExprProcess]

            init_params: &procbase_init
                type: dict

                schema: &procbase_initschema
                    formula:
                        type: sympifyable
                        required: true

                    varnames:
                        type: list
                        schema:
                            type: sympifyable

                    params:
                        type: dict
                        keyschema:
                            type: sympifyable

process: &process_schema
    <<: *procbase
    valueschema:
        <<: *procbase_value
        schema:
            <<: *procbase_valueschema
            init_params:
                <<: *procbase_init
                schema:
                    <<: *procbase_initschema
                    responses:  *procbase



model_schema:

    formulae:
        type: dict
        keyschema:
            type: sympifyable
        valueschema:
            schema:
                variables:
                    type: list
                    schema:
                        type: sympifyable

                expr:
                    type: sympifyable


    environment:
        type: dict

        keyschema:
            type: string

        schema:
            irradiance:
                type: dict
                schema:
                    <<: *irradiance_schema

            chemicals:
                type: dict
                keyschema:
                    type: string

                valueschema:
                    schema:
                        <<: *chemical_schema

            processes:
                <<: *process_schema





    microbes:
        type: dict
        keyschema:
            type: string






